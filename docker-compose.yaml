version: '3.8'

services:
  nodeapp:
    build: 
      context: ./ts_ms_wallet_balance
      dockerfile: Dockerfile
    platform: linux/amd64
    # volumes:
    #   - ./node_ms_wallet:/app
    ports:
      - 3003:3003
    environment:
      - KAFKA_HOST=kafka:29092
      - KAFKA_TOPIC=balances
      - PORT=3003
      - MYSQL_URL=mysql://root:root@mysql2:3306/balance
    depends_on:
      mysql2:
        condition: service_healthy
      kafka:
        condition: service_started
  
  mysql2:
    image: mysql:5.7
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: balance
      MYSQL_PASSWORD: root
    ports:
      - 3307:3306
    volumes:
      - .docker/mysql2:/var/lib/mysql
    #  - ./ts_ms_wallet_balance/src/database/scripts/:/docker-entrypoint-initdb.d
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 5

  goapp: 
    build: 
      context: ./go_ms_wallet_core
      dockerfile: Dockerfile
    platform: linux/amd64
    # volumes:
    #   - ./go_ms_wallet_core:/app
    ports:
      - 8080:8080
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started

  mysql:
    image: mysql:5.7
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wallet
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
      - ./go_ms_wallet_core/internal/database/scripts/:/docker-entrypoint-initdb.d
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 5

  zookeeper:
    image: "confluentinc/cp-zookeeper:6.1.0"
    container_name: zookeeper
    platform: linux/amd64
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - 2181:2181
    environment:
      TZ: Sao_Paulo/Brazil
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: "confluentinc/cp-enterprise-kafka:6.1.0"
    container_name: kafka
    platform: linux/amd64
    restart: on-failure
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
    # Exposes 9092 for external connections to the broker
    # Use kafka:29092 for connections internal on the docker network
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - '9092:9092'
    environment:
      TZ: Sao_Paulo/Brazil
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CREATE_TOPICS: "balances:1:1,transactions:1:1"
  
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: control-center
    platform: linux/amd64
    depends_on:
      kafka:
        condition: service_started
    ports:
      - "9021:9021"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9021"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021